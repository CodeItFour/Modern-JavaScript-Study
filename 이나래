
## 📚 학습 주제
- **주차**: [주차번호] 4-1주차
- **주제**: [학습 주제명] 반복문&함수

## 📝 학습 내용 체크리스트

### ✅ 개념 요약
1.while문
- 조건만 검사함
- 반복 범위를 직접 관리해야 함

2.for문
- 시작·조건·증가를 한 줄에 다 넣음
- 시작부터 끝까지 몇 번 돌릴지 딱 정해진 반복

3.while문/for문 실행흐름 비교
- while: 조건 > 본문 > 조건
- for: 시작 > 조건 > 본문 > 증가 > 조건

4.switch문
- 엄격한 일치 비교=== 사용함
- break가 없으면 밑으로 연쇄 실행 발생

5.switch문/if문 차이점 비교
5-1.비교방식
- switch문은 값이 같아야 하기 때문에 일치 비교(===) 가능 
- if문은 범위 비교, 복잡한 조건식 가능(<, >, &&, || 등)
- switch문은 한 값에 따른 분기처리, if문은 조건이 복잡할 때 사용

5-2.가독성
- switch문: 한 변수에 대해 여러 '경우의 수'를 나눌 때 사용
- if문: 조건이 다양하거나 수학적 계산, 논리연산이 많을 때 사용

---

### 🔍 모르는 개념 연구
1. while/for문, switch문/if문 선택의 기준
- 두 문법은 기능적으로 대체 가능 > 어떤 걸 써도 동작은 같음
- 코드를 짤 때는 정답이 아니라, 읽기 쉬움과 의도 전달력이 중요함
 
---

## 📋 주요 학습 개념 설명/요약 (선택)
- 횟수 반복 → for (반복 횟수가 명확할 때, 예: 배열 길이만큼 돌기)
- 조건 반복 → while (종료 조건이 중요할 때, 예: 사용자가 quit 입력할 때까지)
- 값 분기 → switch (한 변수 값에 따라 여러 경우를 나눌 때 깔끔)
- 복잡 조건 → if (범위, 논리 연산 등 다양한 조건을 처리할 때 적합)

 
---

## ❓ 질문사항 및 토론 포인트
1.만약 저는 while로 코드를 짰는데 팀원이 리뷰에서 for로 바꾸자고 하면
어떻게 합의가 되는지 궁금해졌습니다.

2.switch문에서 break를 빼면 왜 아래 case까지 실행되는지 궁금합니다.

3.switch문의 default와 if문의 else는 사실상 같은 기능인것 같은데
왜 이름을 다르게 정해졌는지 궁금합니다.
---

## 📖 참고 자료 (선택)

