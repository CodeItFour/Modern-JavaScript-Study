##요약 및 상세 개념정리

#alert, prompt, confirm을 이용한 상호작용

1. **alert(message)**
- 기능: 메시지 보여주기 | 버튼: 확인 | 반환값: 없음

2. **prompt**
- 기능: 입력받기 | 버튼: 확인/취소 | 반환값: 문자열/numm

3. **confirm**
- 기능: 예/아니오 질문 | 버튼: 확인/취소 | 반환값: true/false

4. **공통**
- 위치는 브라우저가 직접 만들어서 보여주기 때문에 개발자가 조절 불가. 정중앙 배치
- 모양은 각 브라우저가 자체 디자인을 가지고 있고 다르게 노출됨. 개발자는 메세지, 기본값, 버튼 이름만 설정 가능

---

##팀원들과 공유하면 좋을 포인트
1. type="text/javascript" 같은 속성은 지금은 생략할수 있고 코드 더 간결하게 작성할 수 있음.
외부 JS 파일을 쓸 땐 <script src="파일명.js"> 만 쓰면 되고, 태그 안에 코드를 같이 쓰면 무시되니 주의필요!

2. 자바스크립트는 문(statement) 단위로 동작함. 줄바꿈하면 세미콜론 생략 가능하지만, 초보자일수록 무조건 붙이는 게 안전!

3. use strict는 오타나 선언누락을 에러로 잡아주는 안전장치라고 함.
실무/팀 협업할 땐 꼭 상단에 선언해서 쓰는 습관을 들이는 것이 중요한것 같음.

4. let, const만 사용하기 (var는 NO) 
변경이 필요한 건 let, 변경되면 안 되는 건 const로 구분해서 사용

5. 변수명은 미래의 나와 팀원을 위해 의미 있는 이름 사용하고, 애매한 이름은 지양해야 함. 
팀 코드 스타일에 맞춰 camelCase 사용하고, 줄임말 피하기

6. null과 undefined는 둘 다 없음이지만 의미가 다름. null은 의도적으로 값이 없다는 것이고 undefined는 아직 값이 할당 안된 것.

---

##2주차 2 스터디로 알게 된 점
과거 문법과 현재 문법의 차이를 조금 더 이해하게 되었고,
지금은 더 간결하고 표준화된 방식으로 코드를 작성하는 것이 중요하다는 것을 배웠습니다.
또한, 엄격 모드를 통해 보다 안전하게 코딩하는 습관의 필요성도 느꼈습니다.
자바스크립트의 코드 구조와 변수의 특징, 자료형의 구성에 대해 완벽하진 않지만 점점 이해해가는 유익한 공부 시간이었습니다.
